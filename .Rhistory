n4=sum(eurodip[,4]>0)
n5=sum(eurodip[,5]>0)
n6=sum(eurodip[,6]>0)
n7=sum(eurodip[,7]>0)
m3=sum(eurodip[,3]>0 & (eurodip[,1]>0 | eurodip[,2]>0))
m4=sum(eurodip[,4]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0))
m5=sum(eurodip[,5]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0))
m6=sum(eurodip[,6]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0))
m7=sum(eurodip[,7]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0 | eurodip[,6]))
nc=n1+n2+n3+n4+n5+n6+n7
nplus=nc-m2-m3-m4-m5-m6-m7
sum((1:400)*pcapture(7,nplus,nc))
S=2500;T=7;nplus=294;nc=519
lprob=lchoose(max(nplus,1):S,nplus)+
lgamma(T*max(nplus,1):S-nc+1)-lgamma(T*max(nplus,1):S+2)
prob=c(rep(0,max(nplus,1)-1),exp(lprob-max(lprob)))
sum((1:S)*prob)/sum(prob)
lambda=200
nsimu=10^4
p=rep(1,nsimu); N=p
N[1]=2*nplus
p[1]=rbeta(1,nc+1,T*lambda-nc+1)
for (i in 2:nsimu){
N[i]=nplus+rpois(1,lambda*(1-p[i-1])^T)
p[i]=rbeta(1,nc+1,T*N[i]-nc+1)
}
mean(N)
mean(p)
1/(1+2*sum(acf(N)$acf[-1]))
1/(1+2*sum(acf(p)$acf[-1]))
# Section 5.3
c2=m2
c3=sum(eurodip[,3]>0 & eurodip[,1]>0 )
g2=gibbscap1(10000,n1,c2,c3,200,10,5)
mean(g2$N)
mean(g2$p)
sq=seq(1,10000,by=20)
par(mfrow=c(5,2),mar=c(2,4,1,1))
plot(sq,g2$p[sq],ylab="p",xlab="",type="l")
hist(g2$p,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$q[sq],ylab="q",xlab="",type="l")
hist(g2$q,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$N[sq],ylab="N",xlab="",type="l")
hist(g2$N,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r1[sq],ylab=expression(r[1]),xlab="",type="l")
hist(g2$r1,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r2[sq],ylab=expression(r[2]),xlab="",type="l")
hist(g2$r2,nclass=100,prob=T,main="",ylab="")
#dev.off()
plot(jitter(g2$r1,factor=2),jitter(g2$r2,factor=2),cex=0.5,
xlab=expression(r[1]),ylab=expression(r[2]),xlim=c(-0.5,5),ylim=c(-0.5,6),col=heat.colors(200))
# Section 5.4
mean(thresh(0:11,n1,c2,c3,1,0.1))
ar1=ardipper(10000,n1,c2,c3,1,0.1)
ar1=factor(ar1)
barplot(summary(ar1)/10000,main="",xlab=expression(r[1]))
# Section 5.5
solbeta(.1,.5,.3,10^(-4))
g3=gibbscap2(10000,eurodip)
apply(g3$p,2,mean)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
library(DT)
# Chapter 5 R commands
# Section 5.2.1
data(eurodip)
year81=eurodip[,1]
nplus=sum(year81>0)
N=max(nplus,1)
rangd=N:(10^4*N)
post=1/(rangd*(rangd+1))
plot(density(post))
1/sum(post)
post=post/sum(post)
plot(density(post))
min(rangd[cumsum(post)>.5])
sum(pbino(nplus)*1:400)
# Section 5.2.2
prob=lchoose((471570:10^7),471570)+lgamma(2*(471570:10^7)-582681+1)-lgamma(2*(471570:10^7)+2)
range(prob)
n1=sum(eurodip[,1]>0)
n2=sum(eurodip[,2]>0)
m2=sum((eurodip[,1]>0) & (eurodip[,2]>0))
nc=n1+n2
nplus=n1+n2-m2
sum((1:400)*pcapture(2,nplus,nc))
sum((1:400)*pdarroch(n1,n2,m2))
for (i in 6:16) print(round(sum(pdarroch(n1,n2,i)*1:400)))
# Section 5.2.2
n3=sum(eurodip[,3]>0)
n4=sum(eurodip[,4]>0)
n5=sum(eurodip[,5]>0)
n6=sum(eurodip[,6]>0)
n7=sum(eurodip[,7]>0)
m3=sum(eurodip[,3]>0 & (eurodip[,1]>0 | eurodip[,2]>0))
m4=sum(eurodip[,4]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0))
m5=sum(eurodip[,5]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0))
m6=sum(eurodip[,6]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0))
m7=sum(eurodip[,7]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0 | eurodip[,6]))
nc=n1+n2+n3+n4+n5+n6+n7
nplus=nc-m2-m3-m4-m5-m6-m7
sum((1:400)*pcapture(7,nplus,nc))
S=2500;T=7;nplus=294;nc=519
lprob=lchoose(max(nplus,1):S,nplus)+
lgamma(T*max(nplus,1):S-nc+1)-lgamma(T*max(nplus,1):S+2)
prob=c(rep(0,max(nplus,1)-1),exp(lprob-max(lprob)))
sum((1:S)*prob)/sum(prob)
lambda=200
nsimu=10^4
p=rep(1,nsimu); N=p
N[1]=2*nplus
p[1]=rbeta(1,nc+1,T*lambda-nc+1)
for (i in 2:nsimu){
N[i]=nplus+rpois(1,lambda*(1-p[i-1])^T)
p[i]=rbeta(1,nc+1,T*N[i]-nc+1)
}
mean(N)
mean(p)
1/(1+2*sum(acf(N)$acf[-1]))
1/(1+2*sum(acf(p)$acf[-1]))
# Section 5.3
c2=m2
c3=sum(eurodip[,3]>0 & eurodip[,1]>0 )
g2=gibbscap1(100,n1,c2,c3,200,10,5)
mean(g2$N)
mean(g2$p)
sq=seq(1,10000,by=20)
par(mfrow=c(5,2),mar=c(2,4,1,1))
plot(sq,g2$p[sq],ylab="p",xlab="",type="l")
hist(g2$p,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$q[sq],ylab="q",xlab="",type="l")
hist(g2$q,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$N[sq],ylab="N",xlab="",type="l")
hist(g2$N,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r1[sq],ylab=expression(r[1]),xlab="",type="l")
hist(g2$r1,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r2[sq],ylab=expression(r[2]),xlab="",type="l")
hist(g2$r2,nclass=100,prob=T,main="",ylab="")
#dev.off()
plot(jitter(g2$r1,factor=2),jitter(g2$r2,factor=2),cex=0.5,
xlab=expression(r[1]),ylab=expression(r[2]),xlim=c(-0.5,5),ylim=c(-0.5,6),col=heat.colors(200))
# Section 5.4
mean(thresh(0:11,n1,c2,c3,1,0.1))
ar1=ardipper(10000,n1,c2,c3,1,0.1)
ar1=factor(ar1)
barplot(summary(ar1)/10000,main="",xlab=expression(r[1]))
# Section 5.5
solbeta(.1,.5,.3,10^(-4))
g3=gibbscap2(10000,eurodip)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
library(DT)
# Chapter 5 R commands
# Section 5.2.1
data(eurodip)
year81=eurodip[,1]
nplus=sum(year81>0)
N=max(nplus,1)
rangd=N:(10^4*N)
post=1/(rangd*(rangd+1))
plot(density(post))
1/sum(post)
post=post/sum(post)
plot(density(post))
min(rangd[cumsum(post)>.5])
sum(pbino(nplus)*1:400)
# Section 5.2.2
prob=lchoose((471570:10^7),471570)+lgamma(2*(471570:10^7)-582681+1)-lgamma(2*(471570:10^7)+2)
range(prob)
n1=sum(eurodip[,1]>0)
n2=sum(eurodip[,2]>0)
m2=sum((eurodip[,1]>0) & (eurodip[,2]>0))
nc=n1+n2
nplus=n1+n2-m2
sum((1:400)*pcapture(2,nplus,nc))
sum((1:400)*pdarroch(n1,n2,m2))
for (i in 6:16) print(round(sum(pdarroch(n1,n2,i)*1:400)))
# Section 5.2.2
n3=sum(eurodip[,3]>0)
n4=sum(eurodip[,4]>0)
n5=sum(eurodip[,5]>0)
n6=sum(eurodip[,6]>0)
n7=sum(eurodip[,7]>0)
m3=sum(eurodip[,3]>0 & (eurodip[,1]>0 | eurodip[,2]>0))
m4=sum(eurodip[,4]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0))
m5=sum(eurodip[,5]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0))
m6=sum(eurodip[,6]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0))
m7=sum(eurodip[,7]>0 & (eurodip[,1]>0 | eurodip[,2]>0 | eurodip[,3]>0 | eurodip[,4]>0 | eurodip[,5]>0 | eurodip[,6]))
nc=n1+n2+n3+n4+n5+n6+n7
nplus=nc-m2-m3-m4-m5-m6-m7
sum((1:400)*pcapture(7,nplus,nc))
S=2500;T=7;nplus=294;nc=519
lprob=lchoose(max(nplus,1):S,nplus)+
lgamma(T*max(nplus,1):S-nc+1)-lgamma(T*max(nplus,1):S+2)
prob=c(rep(0,max(nplus,1)-1),exp(lprob-max(lprob)))
sum((1:S)*prob)/sum(prob)
lambda=200
nsimu=10^4
p=rep(1,nsimu); N=p
N[1]=2*nplus
p[1]=rbeta(1,nc+1,T*lambda-nc+1)
for (i in 2:nsimu){
N[i]=nplus+rpois(1,lambda*(1-p[i-1])^T)
p[i]=rbeta(1,nc+1,T*N[i]-nc+1)
}
mean(N)
mean(p)
1/(1+2*sum(acf(N)$acf[-1]))
1/(1+2*sum(acf(p)$acf[-1]))
# Section 5.3
c2=m2
c3=sum(eurodip[,3]>0 & eurodip[,1]>0 )
g2=gibbscap1(10000,n1,c2,c3,200,10,5)
mean(g2$N)
mean(g2$p)
sq=seq(1,10000,by=20)
par(mfrow=c(5,2),mar=c(2,4,1,1))
plot(sq,g2$p[sq],ylab="p",xlab="",type="l")
hist(g2$p,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$q[sq],ylab="q",xlab="",type="l")
hist(g2$q,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$N[sq],ylab="N",xlab="",type="l")
hist(g2$N,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r1[sq],ylab=expression(r[1]),xlab="",type="l")
hist(g2$r1,nclass=100,prob=T,main="",ylab="")
plot(sq,g2$r2[sq],ylab=expression(r[2]),xlab="",type="l")
hist(g2$r2,nclass=100,prob=T,main="",ylab="")
#dev.off()
plot(jitter(g2$r1,factor=2),jitter(g2$r2,factor=2),cex=0.5,
xlab=expression(r[1]),ylab=expression(r[2]),xlim=c(-0.5,5),ylim=c(-0.5,6),col=heat.colors(200))
# Section 5.4
mean(thresh(0:11,n1,c2,c3,1,0.1))
ar1=ardipper(10000,n1,c2,c3,1,0.1)
ar1=factor(ar1)
barplot(summary(ar1)/10000,main="",xlab=expression(r[1]))
# Section 5.5
solbeta(.1,.5,.3,10^(-4))
g3=gibbscap2(10000,eurodip)
apply(g3$p,2,mean)
apply(g3$phi,2,mean)
mean(g3$psi[3,3,])
mean(g3$psi[1,2,])
sq=seq(20,10000,by=20)
par(mfrow=c(3,2),mar=c(2,4,1,1))
plot(sq,g3$p[sq,1],ylab="p(1)",xlab="",type="l")
hist(g3$p[20:10000,1],nclass=100,prob=T,main="",ylab="")
plot(sq,g3$phi[sq,2],ylab=expression(phi(2)),xlab="",type="l")
hist(g3$phi[20:10000,2],nclass=100,prob=T,main="",ylab="")
plot(sq,g3$psi[3,3,sq],ylab=expression(psi(3,3)),xlab="",type="l")
hist(g3$psi[3,3,20:10000],nclass=100,prob=T,main="",ylab="")
# Section 5.5
solbeta(.1,.5,.3,10^(-4))
g3=gibbscap2(10000,eurodip)
apply(g3$p,2,mean)
apply(g3$phi,2,mean)
mean(g3$psi[3,3,])
mean(g3$psi[1,2,])
sq=seq(20,10000,by=20)
par(mfrow=c(3,2),mar=c(2,4,1,1))
plot(sq,g3$p[sq,1],ylab="p(1)",xlab="",type="l")
hist(g3$p[20:10000,1],nclass=100,prob=T,main="",ylab="")
plot(sq,g3$phi[sq,2],ylab=expression(phi(2)),xlab="",type="l")
hist(g3$phi[20:10000,2],nclass=100,prob=T,main="",ylab="")
plot(sq,g3$psi[3,3,sq],ylab=expression(psi(3,3)),xlab="",type="l")
hist(g3$psi[3,3,20:10000],nclass=100,prob=T,main="",ylab="")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
library(DT)
# Section 5.4
n1=22
c2=11
c3=6
mean(thresh(0:11,n1,c2,c3,1,0.1))
mean(thresh(0,n1,c2,c3,1,0.1))
thresh(0:11,n1,c2,c3,1,0.1)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
# Chapter 6 R commands
library(combinat)
data(datha)
datha=as.matrix(datha)
hist(datha,nclas=200,xlab="",xlim=c(min(datha),max(datha)),ylab="",prob=TRUE,main="")
View(datha)
# Section 6.3
n=length(datha)
meand=mean(datha)
vard=var(datha)
sdd=sqrt(vard)
dat=plotmix()$sample
omega=function(z,x,p)
{
n=length(x)
n1=sum(z==1)
n2=n-n1
if (n1==0) xbar1=0 else xbar1=sum((z==1)*x)/n1
if (n2==0) xbar2=0 else xbar2=sum((z==2)*x)/n2
ss1=sum((z==1)*(x-xbar1)^2)
ss2=sum((z==2)*(x-xbar2)^2)
sqrt((n1+.25)*(n2+.25))*p^n1*(1-p)^n2*
exp(-((n1+.25)*ss1+(n2+.25)*ss2)/2)*
exp(-(n1*xbar1^2+n2*xbar2)/8)
}
omega(z=sample(1:2,4,rep=TRUE),x=plotmix(n=4,plot=FALSE)$samp,p=.8)
dat
# Section 6.3
n=length(datha)
meand=mean(datha)
vard=var(datha)
sdd=sqrt(vard)
dat=plotmix()$sample
omega=function(z,x,p)
{
n=length(x)
n1=sum(z==1)
n2=n-n1
if (n1==0) xbar1=0 else xbar1=sum((z==1)*x)/n1
if (n2==0) xbar2=0 else xbar2=sum((z==2)*x)/n2
ss1=sum((z==1)*(x-xbar1)^2)
ss2=sum((z==2)*(x-xbar2)^2)
sqrt((n1+.25)*(n2+.25))*p^n1*(1-p)^n2*
exp(-((n1+.25)*ss1+(n2+.25)*ss2)/2)*
exp(-(n1*xbar1^2+n2*xbar2)/8)
}
omega(z=sample(1:2,4,rep=TRUE),x=plotmix(n=4,plot=FALSE)$samp,p=.8)
# Section 6.4
dat=plotmix()$sample
simu=gibbsmean(0.7,dat)
points(simu,pch=".")
mix=list(k=3,mu=mean(datha),sig=var(datha))
simu=gibbsnorm(100,datha,mix)
hist(datha,prob=T,main="",xlab="",ylab="",nclass=100,col="wheat")
x=y=seq(min(datha),max(datha),length=150)
yy=matrix(0,ncol=150,nrow=100)
for (i in 1:150)
{
yy[,i]=apply(simu$p*dnorm(x[i],mean=simu$mu,sd=sqrt(simu$sig)),1,sum)
y[i]=mean(yy[,i])
}
for (t in 51:100) lines(x,yy[t,],col="gold")
lines(x,y,lwd=2.3,col="sienna2")
dat=plotmix()$sample
simean=hmmeantemp(dat,10000,var=1)
points(simean,pch=19,cex=.4)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
# Section 6.5
# recycling former simu
par(mfrow=c(3,2),mar=c(4,4,1,1.5))
plot(simu$mu[,1],ylim=range(simu$mu),ylab=expression(mu[i]),xlab="n",type="l",col="gold4")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(bayess)
# Chapter 6 R commands
library(combinat)
data(datha)
datha=as.matrix(datha)
hist(datha,nclas=200,xlab="",xlim=c(min(datha),max(datha)),ylab="",prob=TRUE,main="")
# Section 6.3
n=length(datha)
meand=mean(datha)
vard=var(datha)
sdd=sqrt(vard)
dat=plotmix()$sample
omega=function(z,x,p)
{
n=length(x)
n1=sum(z==1)
n2=n-n1
if (n1==0) xbar1=0 else xbar1=sum((z==1)*x)/n1
if (n2==0) xbar2=0 else xbar2=sum((z==2)*x)/n2
ss1=sum((z==1)*(x-xbar1)^2)
ss2=sum((z==2)*(x-xbar2)^2)
sqrt((n1+.25)*(n2+.25))*p^n1*(1-p)^n2*
exp(-((n1+.25)*ss1+(n2+.25)*ss2)/2)*
exp(-(n1*xbar1^2+n2*xbar2)/8)
}
omega(z=sample(1:2,4,rep=TRUE),x=plotmix(n=4,plot=FALSE)$samp,p=.8)
# Section 6.4
dat=plotmix()$sample
simu=gibbsmean(0.7,dat)
points(simu,pch=".")
mix=list(k=3,mu=mean(datha),sig=var(datha))
simu=gibbsnorm(100,datha,mix)
hist(datha,prob=T,main="",xlab="",ylab="",nclass=100,col="wheat")
x=y=seq(min(datha),max(datha),length=150)
yy=matrix(0,ncol=150,nrow=100)
for (i in 1:150)
{
yy[,i]=apply(simu$p*dnorm(x[i],mean=simu$mu,sd=sqrt(simu$sig)),1,sum)
y[i]=mean(yy[,i])
}
for (t in 51:100) lines(x,yy[t,],col="gold")
lines(x,y,lwd=2.3,col="sienna2")
dat=plotmix()$sample
simean=hmmeantemp(dat,10000,var=1)
points(simean,pch=19,cex=.4)
# Section 6.5
# recycling former simu
par(mfrow=c(3,2),mar=c(4,4,1,1.5))
plot(simu$mu[,1],ylim=range(simu$mu),ylab=expression(mu[i]),xlab="n",type="l",col="gold4")
lines(simu$mu[,2],col="sienna3")
lines(simu$mu[,3],col="steelblue")
plot(simu$mu[,2],simu$p[,2],col="sienna3",
xlim=range(simu$mu),ylim=range(simu$p),
xlab=expression(mu[i]),ylab=expression(p[i]))
points(simu$mu[,3],simu$p[,3],col="steelblue")
points(simu$mu[,1],simu$p[,1],col="gold4")
plot(simu$p[,1],ylim=range(simu$p),ylab=expression(p[i]),xlab="n",type="l",col="gold4")
lines(simu$p[,2],col="sienna3")
lines(simu$p[,3],col="steelblue")
plot(simu$p[,2],simu$sig[,2],col="sienna3",
xlim=range(simu$p),ylim=range(simu$sig),
xlab=expression(p[i]),ylab=expression(sigma[i]^2))
points(simu$p[,3],simu$sig[,3],col="steelblue")
points(simu$p[,1],simu$sig[,1],col="gold4")
plot(simu$sig[,1],ylim=range(simu$sig),ylab=expression(sigma[i]^2),xlab="n",type="l",col="gold4")
lines(simu$sig[,2],col="sienna3")
lines(simu$sig[,3],col="steelblue")
plot(simu$sig[,2],simu$mu[,2],col="sienna3",
xlim=range(simu$sig),ylim=range(simu$mu),
xlab=expression(sigma[i]^2),ylab=expression(mu[i]))
points(simu$sig[,3],simu$mu[,3],col="steelblue")
points(simu$sig[,1],simu$mu[,1],col="gold4")
indimap=order(simu$lopost,decreasing=TRUE)[1]
map=list(mu=simu$mu[indimap,],
sig=simu$sig[indimap,],
p=simu$p[indimap,])
lili=alloc=matrix(0,length(datha),3)
for (t in 1:length(datha))
{
lili[t,]=map$p*dnorm(datha[t],mean=map$mu,
sd=sqrt(map$sig))
lili[t,]=lili[t,]/sum(lili[t,])
}
ormu=orsig=orp=matrix(0,ncol=3,nrow=1000)
perma=permn(3)
for (t in 1:1000)
{
entropies=rep(0,factorial(3))
for (j in 1:n)
{
alloc[j,]=simu$p[t,]*dnorm(datha[j],mean=simu$mu[t,],
sd=sqrt(simu$sig[t,]))
alloc[j,]=alloc[j,]/sum(alloc[j,])
for (i in 1:factorial(3))
entropies[i]=entropies[i]+
sum(lili[j,]*log(alloc[j,perma[[i]]]))
}
best=order(entropies,decreasing=TRUE)[1]
ormu[t,]=simu$mu[t,perma[[best]]]
orsig[t,]=simu$sig[t,perma[[best]]]
orp[t,]=simu$p[t,perma[[best]]]
}
# Section 6.5
# recycling former simu
par(mfrow=c(3,2),mar=c(4,4,1,1.5))
plot(simu$mu[,1],ylim=range(simu$mu),ylab=expression(mu[i]),xlab="n",type="l",col="gold4")
lines(simu$mu[,2],col="sienna3")
lines(simu$mu[,3],col="steelblue")
plot(simu$mu[,2],simu$p[,2],col="sienna3",
xlim=range(simu$mu),ylim=range(simu$p),
xlab=expression(mu[i]),ylab=expression(p[i]))
points(simu$mu[,3],simu$p[,3],col="steelblue")
points(simu$mu[,1],simu$p[,1],col="gold4")
plot(simu$p[,1],ylim=range(simu$p),ylab=expression(p[i]),xlab="n",type="l",col="gold4")
lines(simu$p[,2],col="sienna3")
lines(simu$p[,3],col="steelblue")
plot(simu$p[,2],simu$sig[,2],col="sienna3",
xlim=range(simu$p),ylim=range(simu$sig),
xlab=expression(p[i]),ylab=expression(sigma[i]^2))
points(simu$p[,3],simu$sig[,3],col="steelblue")
points(simu$p[,1],simu$sig[,1],col="gold4")
plot(simu$sig[,1],ylim=range(simu$sig),ylab=expression(sigma[i]^2),xlab="n",type="l",col="gold4")
lines(simu$sig[,2],col="sienna3")
lines(simu$sig[,3],col="steelblue")
plot(simu$sig[,2],simu$mu[,2],col="sienna3",
xlim=range(simu$sig),ylim=range(simu$mu),
xlab=expression(sigma[i]^2),ylab=expression(mu[i]))
points(simu$sig[,3],simu$mu[,3],col="steelblue")
points(simu$sig[,1],simu$mu[,1],col="gold4")
indimap=order(simu$lopost,decreasing=TRUE)[1]
map=list(mu=simu$mu[indimap,],
sig=simu$sig[indimap,],
p=simu$p[indimap,])
lili=alloc=matrix(0,length(datha),3)
for (t in 1:length(datha))
{
lili[t,]=map$p*dnorm(datha[t],mean=map$mu,
sd=sqrt(map$sig))
lili[t,]=lili[t,]/sum(lili[t,])
}
ormu=orsig=orp=matrix(0,ncol=3,nrow=1000)
perma=permn(3)
for (t in 1:1000)
{
entropies=rep(0,factorial(3))
for (j in 1:n)
{
alloc[j,]=simu$p[t,]*dnorm(datha[j],mean=simu$mu[t,],
sd=sqrt(simu$sig[t,]))
alloc[j,]=alloc[j,]/sum(alloc[j,])
for (i in 1:factorial(3))
entropies[i]=entropies[i]+
sum(lili[j,]*log(alloc[j,perma[[i]]]))
}
best=order(entropies,decreasing=TRUE)[1]
ormu[t,]=simu$mu[t,perma[[best]]]
orsig[t,]=simu$sig[t,perma[[best]]]
orp[t,]=simu$p[t,perma[[best]]]
}
shiny::runApp('~/Documents/MEPHAS/mephas_web/9CLanalysis')
install.packages(c("factoextra", "umap"))
runApp('~/Documents/MEPHAS/mephas_web/9CLanalysis')
